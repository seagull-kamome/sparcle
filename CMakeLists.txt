cmake_minimum_required(VERSION 3.0 FATAL_ERROR)


project(sparcle C CXX)

set (PROJECT_VERSION_MAJOR 0)
set (PROJECT_VERSION_MINOR 1)

configure_file(
  "${PROJECT_SOURCE_DIR}/src/sparcle.h.in"
  "${PROJECT_BINARY_DIR}/sparcle.h")
include_directories("${PROJECT_BINARY_DIR}")


add_library(sparcle
  src/sparcle.c)
set (CMAKE_CXX_COMPILER gcc)
set (CMAKE_C_COMPILER gcc)
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu1z ~Wall")
set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu11 -Wall")


FIND_PACKAGE(Doxygen)
IF(DOXYGEN_FOUND)
  SET(DOXYGEN_CONF_FILE "Doxyfile")
  SET(DOXYGEN_CONF_PATH   ${CMAKE_CURRENT_BINARY_DIR}/${DOXYGEN_CONF_FILE})
  SET(DOXYGEN_SOURCE_DIR ${CMAKE_SOURCE_DIR})
  SET(DOXYGEN_TARGET "doc" )

  CONFIGURE_FILE(${DOXYGEN_CONF_FILE}.in ${DOXYGEN_CONF_PATH})

  ADD_CUSTOM_TARGET(${DOXYGEN_TARGET}
    ${DOXYGEN_EXECUTABLE} ${DOXYGEN_CONF_PATH}
    DEPENDS  ${DOXYGEN_CONF_PATH})
ELSE(DOXYGEN_FOUND)
  # MESSAGE (WARNING "doxygen binary couldn't be found")
ENDIF(DOXYGEN_FOUND)



install(FILES ${PROJECT_BINARY_DIR}/sparcle.h DESTINATION include)
install(TARGETS sparcle
  INCLUDES DESTINATION include
  ARCHIVE DESTINATION lib
  )

